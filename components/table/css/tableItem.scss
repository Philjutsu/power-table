@use '../../../scss/main.scss' as *;
@use './levels.scss' as level;
@use './config.scss' as *;

$edgeItemRadius: 5px;
$defaultBG: #dcdcdc;
$defaultTextColor: #333;

%tableHeading {
	text-transform: uppercase;
}

%tableItem {
    flex: 1;
	box-sizing: border-box;
	line-height: 1.2em;
	position: relative;
    margin-right: 0px;
    position: relative;

    @include level.levelZero();

    .itemHeading {
        @extend %tableHeading;
        display:none;

        @media (max-width: $mediaMid) {
            & {
                display:block;
                padding-right:.5em;
                margin:3px 0;
            }
        }
    }

    .container {
        background: map-get($tableItemBgColors, default);
        width:100%;
        height:100%;
        box-sizing: border-box;
        word-break: break-word;
        overflow: hidden;
        padding: 1.3em 10px;
        position: relative;
        box-sizing: border-box;
        border-right:1px solid rgb(187 187 187 / 31%);

        &:last-child {
            border:none;
        }
    }

    .content {
        position:relative;
    }

    .shadow {
        width:calc(100% - 2px);
        margin: 0 auto;
        left: 0;
        right: 0;
        height:calc(100% - 5px);
        background:#000;
        position: absolute;
    }

    @media (max-width: $mediaMid) {
        & {
            .container {
                display:flex;
                line-height: 1;
                align-items: center;
                padding: .3em 10px;
            }
        }
    }
}

.columnHighlighted {
    @include level.levelTwo();

    .container {
        background: map-get($tableItemBgColors, columnHover);
    }

    &.lastRow .container {
        border-bottom-left-radius:5px;
        border-bottom-right-radius: 5px;
    }
    &.columnHeading .container {
        border-top-left-radius:5px;
        border-top-right-radius: 5px;
        background:lighten($defaultBG, 1);
        color: #000;
    }
    .shadow {
        display:none;
    }
    &.lastRow .shadow {
        display:block;
        width:calc(100% - 1px);
    }
}

%tableItemContainerColors {
    &.rowSelected {
        .container {
            background: map-get($tableItemBgColors, rowSelected);
        }
    }

    &.columnHighlighted {
        :nth-child(even) .container {
            background: map-get($tableItemBgColors, columnHover);
        }
    }

    &.columnSelected {
        .container {
            background: map-get($tableItemBgColors, columnSelected);
            color:#333;
        }

        &.columnHeading .container {
            background: map-get($tableItemBgColors, columnSelectedHeading);
            color:#FFF;
        }

        &.columnHighlighted {
            .container {
                background: map-get($tableItemBgColors, columnHoverSelected);
            }
            &.columnHeading .container {
                background: map-get($tableItemBgColors, columnSelectedHeadingHover);
            }
        }
    }

    &.rowSelected.columnSelected {
        .container {
            background:lighten($defaultBG, 50%);
        }
    }
}

@mixin tableRowHover() {
    .tableItem {
        @include level.levelTwo();

        .container {
            transform:scale(1.03);
        }

        &:first-child .container {
            border-top-left-radius: $edgeItemRadius;
            border-bottom-left-radius: $edgeItemRadius;
        }

        &:last-child .container {
            border-top-right-radius: $edgeItemRadius;
            border-bottom-right-radius: $edgeItemRadius;
        }

        .container {
            background: map-get($tableItemBgColors, rowHover);
        }

        &:first-child .shadow {
            width:calc(100% - 3px);
            left:4px;
        }

        &:last-child .shadow {
            width:calc(100% - 3px);
            right:3px;
        }

        .itemHeading {
            display:block;
            position: absolute;
            animation: tableItemTitleShow .3s;
            animation-delay: 1s;
            animation-iteration-count:1;
            animation-fill-mode: forwards;
            background-color:inherit;
            display:block;
            opacity:0;
            font-size:.8em;
            
        }

        .content {
            position:relative;
            animation: tableItemContentMove .3s;
            animation-delay: 1s;
            animation-iteration-count:1;
            animation-fill-mode: forwards;
        }
    }

    &.rowSelected {
        .container {
            background: map-get($tableItemBgColors, rowHoverSelected);
        }
    }
}
.dragging {
    @include level.levelThree();
    
    .container {
        background:#0F0;
    }
}


@keyframes tableItemTitleShow {
    0% {
        top:1em;
    }
    100% {
        opacity: 1;
        top:.9em;
    }
}

@keyframes tableItemContentMove {
    0% {
        bottom:0;
    }
    100% {
        bottom:-.7em;
    }
}